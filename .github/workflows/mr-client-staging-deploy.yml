name: "MR-CLIENT: Staging Deploy"

on:
  push:
    branches:
      - main

env:
  CLOUD_RUN_PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_ID }}
  CLOUD_RUN_REGION: ${{ secrets.CLOUD_RUN_REGION }}
  REPO_NAME: mind-racing-client-staging

jobs:
  create-env-file:
    name: "Create .env file"
    runs-on: ubuntu-latest

    steps:
      - name: Create a new .env file
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
          envkey_AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL_STAGING }}
          envkey_AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
          envkey_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          envkey_AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          directory: packages/mr-client/
          file_name: .env.production

  build-and-deploy:
    name: Setup, build, and deploy
    runs-on: ubuntu-latest
    needs: create-env-file

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.CLOUD_RUN_PROJECT_ID }}
          service_account_key: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_KEY }}
          service_account_email: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_EMAIL }}

      - name: Enable the necessary APIs and enable Docker auth
        run: |-
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud --quiet auth configure-docker
      - name: Build and tag image
        run: |-
          docker build -f packages/mr-client/Dockerfile . -t "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA"
      - name: Push image to GCR
        run: |-
          docker push gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA
      - name: Deploy on GCR
        run: |-
          gcloud components install beta --quiet
          gcloud beta run deploy $REPO_NAME --image gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
            --project $CLOUD_RUN_PROJECT_ID \
            --platform managed \
            --region $CLOUD_RUN_REGION \
            --allow-unauthenticated \
            --quiet
